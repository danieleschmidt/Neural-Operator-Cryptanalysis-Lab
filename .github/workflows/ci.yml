name: Neural Operator Cryptanalysis Lab CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,research]"
        
    - name: Lint with flake8
      run: |
        flake8 src/neural_cryptanalysis --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/neural_cryptanalysis --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check src/neural_cryptanalysis tests
        
    - name: Type check with mypy
      run: |
        mypy src/neural_cryptanalysis --ignore-missing-imports
        
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src/neural_cryptanalysis --cov-report=xml --cov-fail-under=85
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Security check with bandit
      run: |
        bandit -r src/neural_cryptanalysis -f json -o bandit-report.json
        
    - name: Check dependencies with safety
      run: |
        safety check --json --output safety-report.json
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json