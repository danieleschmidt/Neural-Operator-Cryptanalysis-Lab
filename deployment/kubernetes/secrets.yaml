apiVersion: v1
kind: Secret
metadata:
  name: neural-crypto-secrets
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # These should be base64 encoded and replaced with actual values
  # Use: echo -n 'your_secret' | base64
  POSTGRES_PASSWORD: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=  # change_me_in_production
  REDIS_PASSWORD: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=     # change_me_in_production
  JWT_SECRET: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=          # change_me_in_production
  SECRET_KEY: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=          # change_me_in_production
  GRAFANA_ADMIN_PASSWORD: YWRtaW4=                      # admin
  GRAFANA_SECRET_KEY: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=  # change_me_in_production
  GRAFANA_DB_PASSWORD: Y2hhbmdlX21lX2luX3Byb2R1Y3Rpb24=  # change_me_in_production
---
apiVersion: v1
kind: Secret
metadata:
  name: neural-crypto-tls
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # These should be replaced with actual TLS certificate and key
  # Generate with: kubectl create secret tls neural-crypto-tls --cert=path/to/tls.crt --key=path/to/tls.key
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t  # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t  # Base64 encoded private key
---
apiVersion: v1
kind: Secret
metadata:
  name: neural-crypto-registry
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for private images
  # Generate with: kubectl create secret docker-registry neural-crypto-registry --docker-username=user --docker-password=pass --docker-email=email
  .dockerconfigjson: eyJhdXRocyI6e319  # Base64 encoded Docker config