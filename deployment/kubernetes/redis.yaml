apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neural-crypto-redis-pvc
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neural-crypto-redis
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: redis
    app.kubernetes.io/version: "7"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: neural-cryptanalysis
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: neural-cryptanalysis
        app.kubernetes.io/component: redis
        app.kubernetes.io/version: "7"
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: neural-crypto-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /etc/redis
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 999
          capabilities:
            drop:
            - ALL
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: neural-crypto-redis-pvc
      - name: redis-config
        configMap:
          name: neural-crypto-redis-config
---
apiVersion: v1
kind: Service
metadata:
  name: neural-crypto-redis
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neural-crypto-redis-config
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: redis
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Security
    requirepass ${REDIS_PASSWORD}
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Append only file
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    
    # Memory management
    maxmemory 768mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5
    
    # Lazy freeing
    lazyfree-lazy-eviction yes
    lazyfree-lazy-expire yes
    lazyfree-lazy-server-del yes
    
    # Clients
    maxclients 10000
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128