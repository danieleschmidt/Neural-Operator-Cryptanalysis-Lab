apiVersion: v1
kind: ConfigMap
metadata:
  name: neural-crypto-config
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: config
data:
  PYTHONPATH: "/app/src"
  NEURAL_CRYPTO_LOG_LEVEL: "INFO"
  NEURAL_CRYPTO_SECURITY_MODE: "production"
  NEURAL_CRYPTO_AUDIT_LOGGING: "true"
  NEURAL_CRYPTO_REQUIRE_AUTHORIZATION: "true"
  NEURAL_CRYPTO_MAX_WORKERS: "4"
  NEURAL_CRYPTO_TIMEOUT: "300"
  NEURAL_CRYPTO_RATE_LIMIT: "1000"
  NEURAL_CRYPTO_CACHE_TTL: "3600"
  
  # Database configuration
  NEURAL_CRYPTO_DB_HOST: "neural-crypto-postgresql"
  NEURAL_CRYPTO_DB_PORT: "5432"
  NEURAL_CRYPTO_DB_NAME: "cryptanalysis"
  NEURAL_CRYPTO_DB_USER: "crypto_user"
  
  # Redis configuration
  NEURAL_CRYPTO_REDIS_HOST: "neural-crypto-redis"
  NEURAL_CRYPTO_REDIS_PORT: "6379"
  NEURAL_CRYPTO_REDIS_DB: "0"
  
  # Monitoring configuration
  NEURAL_CRYPTO_METRICS_ENABLED: "true"
  NEURAL_CRYPTO_TRACING_ENABLED: "true"
  JAEGER_AGENT_HOST: "neural-crypto-jaeger-agent"
  JAEGER_AGENT_PORT: "6831"
  
  # Internationalization
  NEURAL_CRYPTO_DEFAULT_LOCALE: "en"
  NEURAL_CRYPTO_SUPPORTED_LOCALES: "en,es,fr,de,ja,zh"
  
  # Compliance
  NEURAL_CRYPTO_GDPR_ENABLED: "true"
  NEURAL_CRYPTO_CCPA_ENABLED: "true"
  NEURAL_CRYPTO_PDPA_ENABLED: "true"
  NEURAL_CRYPTO_DATA_RETENTION_DAYS: "90"
  
  # Performance tuning
  NEURAL_CRYPTO_BATCH_SIZE: "32"
  NEURAL_CRYPTO_MAX_MEMORY_MB: "2048"
  NEURAL_CRYPTO_THREAD_POOL_SIZE: "8"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neural-crypto-nginx-config
  namespace: neural-cryptanalysis
  labels:
    app.kubernetes.io/name: neural-cryptanalysis
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_status 429;
        
        # Upstream
        upstream neural_crypto_backend {
            least_conn;
            server neural-crypto-api:8000 max_fails=3 fail_timeout=30s;
            keepalive 32;
        }
        
        server {
            listen 80;
            listen [::]:80;
            server_name _;
            
            # Redirect HTTP to HTTPS
            return 301 https://$server_name$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name _;
            
            # SSL configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://neural_crypto_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            
            # Health check
            location /health {
                access_log off;
                proxy_pass http://neural_crypto_backend/health;
                proxy_set_header Host $host;
            }
            
            # Metrics (restrict access)
            location /metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                proxy_pass http://neural_crypto_backend/metrics;
            }
        }
    }